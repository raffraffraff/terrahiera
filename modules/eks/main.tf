module "eks" {

  source  = "terraform-aws-modules/eks/aws"
  access_entries                                =  try(local.config.access_entries,{})
  attach_cluster_encryption_policy              =  try(local.config.attach_cluster_encryption_policy,true)
  authentication_mode                           =  try(local.config.authentication_mode,"API_AND_CONFIG_MAP")
  bootstrap_self_managed_addons                 =  try(local.config.bootstrap_self_managed_addons,null)
  cloudwatch_log_group_class                    =  try(local.config.cloudwatch_log_group_class,null)
  cloudwatch_log_group_kms_key_id               =  try(local.config.cloudwatch_log_group_kms_key_id,null)
  cloudwatch_log_group_retention_in_days        =  try(local.config.cloudwatch_log_group_retention_in_days,90)
  cloudwatch_log_group_tags                     =  try(local.config.cloudwatch_log_group_tags,{})
  cluster_additional_security_group_ids         =  try(local.config.cluster_additional_security_group_ids,[])
  cluster_addons                                =  try(local.config.cluster_addons,{})
  cluster_addons_timeouts                       =  try(local.config.cluster_addons_timeouts,{})
  cluster_compute_config                        =  try(local.config.cluster_compute_config,{})
  cluster_enabled_log_types                     =  try(local.config.cluster_enabled_log_types,["audit","api","authenticator"])
  cluster_encryption_config                     =  try(local.config.cluster_encryption_config,{"resources":["secrets"]})
  cluster_encryption_policy_description         =  try(local.config.cluster_encryption_policy_description,"Cluster encryption policy to allow cluster role to utilize CMK provided")
  cluster_encryption_policy_name                =  try(local.config.cluster_encryption_policy_name,null)
  cluster_encryption_policy_path                =  try(local.config.cluster_encryption_policy_path,null)
  cluster_encryption_policy_tags                =  try(local.config.cluster_encryption_policy_tags,{})
  cluster_encryption_policy_use_name_prefix     =  try(local.config.cluster_encryption_policy_use_name_prefix,true)
  cluster_endpoint_private_access               =  try(local.config.cluster_endpoint_private_access,true)
  cluster_endpoint_public_access                =  try(local.config.cluster_endpoint_public_access,false)
  cluster_endpoint_public_access_cidrs          =  try(local.config.cluster_endpoint_public_access_cidrs,["0.0.0.0/0"])
  cluster_force_update_version                  =  try(local.config.cluster_force_update_version,null)
  cluster_identity_providers                    =  try(local.config.cluster_identity_providers,{})
  cluster_ip_family                             =  try(local.config.cluster_ip_family,"ipv4")
  cluster_name                                  =  try(local.config.cluster_name,"")
  cluster_remote_network_config                 =  try(local.config.cluster_remote_network_config,{})
  cluster_security_group_additional_rules       =  try(local.config.cluster_security_group_additional_rules,{})
  cluster_security_group_description            =  try(local.config.cluster_security_group_description,"EKS cluster security group")
  cluster_security_group_id                     =  try(local.config.cluster_security_group_id,"")
  cluster_security_group_name                   =  try(local.config.cluster_security_group_name,null)
  cluster_security_group_tags                   =  try(local.config.cluster_security_group_tags,{})
  cluster_security_group_use_name_prefix        =  try(local.config.cluster_security_group_use_name_prefix,true)
  cluster_service_ipv4_cidr                     =  try(local.config.cluster_service_ipv4_cidr,null)
  cluster_service_ipv6_cidr                     =  try(local.config.cluster_service_ipv6_cidr,null)
  cluster_tags                                  =  try(local.config.cluster_tags,{})
  cluster_timeouts                              =  try(local.config.cluster_timeouts,{})
  cluster_upgrade_policy                        =  try(local.config.cluster_upgrade_policy,{})
  cluster_version                               =  try(local.config.cluster_version,null)
  cluster_zonal_shift_config                    =  try(local.config.cluster_zonal_shift_config,{})
  control_plane_subnet_ids                      =  try(local.config.control_plane_subnet_ids,[])
  create                                        =  try(local.config.create,true)
  create_cloudwatch_log_group                   =  try(local.config.create_cloudwatch_log_group,true)
  create_cluster_primary_security_group_tags    =  try(local.config.create_cluster_primary_security_group_tags,true)
  create_cluster_security_group                 =  try(local.config.create_cluster_security_group,true)
  create_cni_ipv6_iam_policy                    =  try(local.config.create_cni_ipv6_iam_policy,false)
  create_iam_role                               =  try(local.config.create_iam_role,true)
  create_kms_key                                =  try(local.config.create_kms_key,true)
  create_node_iam_role                          =  try(local.config.create_node_iam_role,true)
  create_node_security_group                    =  try(local.config.create_node_security_group,true)
  custom_oidc_thumbprints                       =  try(local.config.custom_oidc_thumbprints,[])
  dataplane_wait_duration                       =  try(local.config.dataplane_wait_duration,"30s")
  eks_managed_node_group_defaults               =  try(local.config.eks_managed_node_group_defaults,{})
  eks_managed_node_groups                       =  try(local.config.eks_managed_node_groups,{})
  enable_auto_mode_custom_tags                  =  try(local.config.enable_auto_mode_custom_tags,true)
  enable_cluster_creator_admin_permissions      =  try(local.config.enable_cluster_creator_admin_permissions,false)
  enable_efa_support                            =  try(local.config.enable_efa_support,false)
  enable_irsa                                   =  try(local.config.enable_irsa,true)
  enable_kms_key_rotation                       =  try(local.config.enable_kms_key_rotation,true)
  enable_security_groups_for_pods               =  try(local.config.enable_security_groups_for_pods,true)
  fargate_profile_defaults                      =  try(local.config.fargate_profile_defaults,{})
  fargate_profiles                              =  try(local.config.fargate_profiles,{})
  iam_role_additional_policies                  =  try(local.config.iam_role_additional_policies,{})
  iam_role_arn                                  =  try(local.config.iam_role_arn,null)
  iam_role_description                          =  try(local.config.iam_role_description,null)
  iam_role_name                                 =  try(local.config.iam_role_name,null)
  iam_role_path                                 =  try(local.config.iam_role_path,null)
  iam_role_permissions_boundary                 =  try(local.config.iam_role_permissions_boundary,null)
  iam_role_tags                                 =  try(local.config.iam_role_tags,{})
  iam_role_use_name_prefix                      =  try(local.config.iam_role_use_name_prefix,true)
  include_oidc_root_ca_thumbprint               =  try(local.config.include_oidc_root_ca_thumbprint,true)
  kms_key_administrators                        =  try(local.config.kms_key_administrators,[])
  kms_key_aliases                               =  try(local.config.kms_key_aliases,[])
  kms_key_deletion_window_in_days               =  try(local.config.kms_key_deletion_window_in_days,null)
  kms_key_description                           =  try(local.config.kms_key_description,null)
  kms_key_enable_default_policy                 =  try(local.config.kms_key_enable_default_policy,true)
  kms_key_override_policy_documents             =  try(local.config.kms_key_override_policy_documents,[])
  kms_key_owners                                =  try(local.config.kms_key_owners,[])
  kms_key_service_users                         =  try(local.config.kms_key_service_users,[])
  kms_key_source_policy_documents               =  try(local.config.kms_key_source_policy_documents,[])
  kms_key_users                                 =  try(local.config.kms_key_users,[])
  node_iam_role_additional_policies             =  try(local.config.node_iam_role_additional_policies,{})
  node_iam_role_description                     =  try(local.config.node_iam_role_description,null)
  node_iam_role_name                            =  try(local.config.node_iam_role_name,null)
  node_iam_role_path                            =  try(local.config.node_iam_role_path,null)
  node_iam_role_permissions_boundary            =  try(local.config.node_iam_role_permissions_boundary,null)
  node_iam_role_tags                            =  try(local.config.node_iam_role_tags,{})
  node_iam_role_use_name_prefix                 =  try(local.config.node_iam_role_use_name_prefix,true)
  node_security_group_additional_rules          =  try(local.config.node_security_group_additional_rules,{})
  node_security_group_description               =  try(local.config.node_security_group_description,"EKS node shared security group")
  node_security_group_enable_recommended_rules  =  try(local.config.node_security_group_enable_recommended_rules,true)
  node_security_group_id                        =  try(local.config.node_security_group_id,"")
  node_security_group_name                      =  try(local.config.node_security_group_name,null)
  node_security_group_tags                      =  try(local.config.node_security_group_tags,{})
  node_security_group_use_name_prefix           =  try(local.config.node_security_group_use_name_prefix,true)
  openid_connect_audiences                      =  try(local.config.openid_connect_audiences,[])
  outpost_config                                =  try(local.config.outpost_config,{})
  prefix_separator                              =  try(local.config.prefix_separator,"-")
  putin_khuylo                                  =  try(local.config.putin_khuylo,true)
  self_managed_node_group_defaults              =  try(local.config.self_managed_node_group_defaults,{})
  self_managed_node_groups                      =  try(local.config.self_managed_node_groups,{})
  subnet_ids                                    =  try(local.config.subnet_ids,[])
  tags                                          =  try(local.config.tags,{})
  vpc_id                                        =  try(local.config.vpc_id,null)

}

